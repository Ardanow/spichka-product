@import "bourbon"
@import "vars"

=cfx
  &:after
    content: "."
    display: block
    height: 0
    clear: both
    visibility: hidden
  * html &
    height: 1px

// Стилизация placeholder
=place($cl)
  &::-webkit-input-placeholder
    color: $cl
  &::-moz-placeholder
    color: $cl
  &:-moz-placeholder
    color: $cl
  &:-ms-input-placeholder
    color: $cl

// горизонтальное выравнивание для inline блока
=justify
  text-align: justify
  line-height: 0
  font-size: 0
  text-justify: newspaper
  zoom: 1
  text-align-last: justify
  &:after
    content: ""
    display: inline-block
    width: 100%
    height: 0px
    visibility: hidden
    overflow: hidden

// вертикальное выравнивание для inline блока
=vertical
  text-align: center
  font-size: 0
  &:before
    content: ""
    display: inline-block
    vertical-align: middle
    width: 0
    height: 100%

// (тень блока)
=bsh($top, $left, $blur, $size, $color, $inset: false)
  @if $inset
    -webkit-box-shadow: inset $top $left $blur $size $color
    -moz-box-shadow: inset $top $left $blur $size $color
    box-shadow: inset $top $left $blur $size $color
  @else
    -webkit-box-shadow: $top $left $blur $size $color
    -moz-box-shadow: $top $left $blur $size $color
    box-shadow: $top $left $blur $size $color

// тень текста
=ts($x, $y, $blur, $color)
  text-shadow: $x $y $blur $color
// тень текста (множественный эффект)
=text-shadow($shadows...)
  text-shadow: $shadows

// трансформация, плавный переход
=transit($what: all, $when: 0.3s, $how: ease)
  -webkit-transition: $what $when $how
  -moz-transition: $what $when $how
  -ms-transition: $what $when $how
  -o-transition: $what $when $how
  transition: $what $when $how

// скругление универсальное
=br($rad)
  -webkit-border-radius: $rad
  -moz-border-radius: $rad
  -ms-border-radius: $rad
  border-radius: $rad

// Скругление на каждый угол
=br-c($p1, $p2, $p3, $p4)
  -webkit-border-radius: $p1 $p2 $p3 $p4
  -moz-border-radius: $p1 $p2 $p3 $p4
  -ms-border-radius: $p1 $p2 $p3 $p4
  border-radius: $p1 $p2 $p3 $p4

// Окружность с центрованным элементом
=round($w: 80px, $bd: 3px)
  display: table-cell
  vertical-align: middle
  text-align: center
  +br($w / 2)
  height: $w
  width: $w
  border-width: $bd
  border-style: solid
  border-color: $white

// градиент линейный
=grad-l($direction, $color-stops)
  background: nth(nth($color-stops, 1), 1)
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops)
  background: linear-gradient($direction, $color-stops)

// Бэкграунд на всю ширину экрана.
=cover-background($img-uri, $background-top: "center", $background-left: "center", $background-attachment: "fixed")
  background: url($img-uri) no-repeat unquote($background-top) unquote($background-left) unquote($background-attachment)
  -webkit-background-size: cover
  -moz-background-size: cover
  -o-background-size: cover
  background-size: cover

// Горизонтальная линия
=sep-h($w, $h, $color)
  &:after
    content: ""
    display: block
    height: $h
    width: $w
    margin: 0 auto
    background-color: $color

// Сброс параметров списка
=rul
  margin: 0
  padding: 0
  list-style: none

//Поведение при наведении на ссылку
=hov-a($under, $color)
  &:hover, &:focus
    text-decoration: $under
    color: $color

// эффект при наведении
=hov1
  &:hover
    opacity: 0.8

=hov2
  transition: all .2s ease-out
  &:hover
    opacity: 0.8
    box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.5)
    transition: all .2s ease-out

=hov3($color, $alpha)
  transition: all .3s ease-in-out
  &:hover
    transition: all .1s ease-in-out
    -webkit-box-shadow: 0 0 3px $color
    -moz-box-shadow: 0 0 3px $color
    box-shadow: 0 0 3px $color
    opacity: $alpha
// Конец эффектов при наведении

// (кнопка color)
=btn
  display: inline-block
  border: 1px solid $black
  color: $white
  cursor: pointer
  outline: none
  width: 100%
  text-align: center
  text-decoration: none
  font-family: "Arial"
  font-size: 15pt
  padding: 6px 10px
  +br(5px)
  +ts(0,0,0,$black)
  +grad-l($black, $white)
  &:hover
    +grad-l($white, $black)
    
=rounded($radius: 5px)
  -webkit-border-radius: $radius
  -moz-border-radius: $radius
  border-radius: $radius

=gradient($from, $to)
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}')

// (кнопка с градиентом)
=btn_g($color: $red, $text_color: $white)
  display: inline-block
  outline: none
  cursor: pointer
  text-align: center
  text-decoration: none
  font: 14px/100% Arial, Helvetica, sans-serif
  padding: 10px 20px 12px
  color: $text_color !important
  font-weight: bold
  border: solid 1px darken($color, 18%)
  background: $color
  +rounded
  +bsh(0, 1px, 2px, 0, black)
  +gradient(saturate($color, 15%), darken($color, 15%))
  &:hover
    text-decoration: none
    background: saturate($color, 10%)
    +gradient(saturate($color, 5%), darken($color, 5%))
  &:active
    position: relative
    top: 1px
    color: saturate($color, 15%)
    +gradient(saturate($color, 15%), lighten($color, 15%))

// font media style
=fms($fz: $fz16, $fm: $fm16)
  font-size: $fz
  @media screen and (max-width: 600px)
    font-size: $fm

// color function
@function color($group, $shade: normal, $transparency: 1)
  @each $color in $color-stack
    $c-group: map-get($color, group)
    $c-shade: map-get($color, id)

    @if $group == map-get($color, group) and $shade == map-get($color, id)
      @return rgba(map-get($color, color), $transparency)

// Media enquiries
=lg($media) //large
  @if $media == min-w
    @media only screen and (min-width: $large + 1)
      @content
  // Exsample: +lg(min-w) 
  //            color: red

=md($media) //medium
  @if $media == max-w
    @media only screen and (max-width: $large)
      @content
  // Exsample: +md(max-w) 
  //            color: red
  @else if $media == med-w
    @media only screen and (min-width: $medium + 1) and (max-width: $large - 1)
      @content
  // Exsample: +md(med-w) 
  //            color: red
  @else if $media == min-w
    @media only screen and (min-width: $medium)
      @content
  // Exsample: +md(min-w) 
  //            color: red

=sm($media) //small
  @if $media == max-w
    @media only screen and (max-width: $medium)
      @content
  // Exsample: +sm(max-w) 
  //            color: red
  @else if $media == med-w
    @media only screen and (min-width: $small + 1) and (max-width: $medium - 1)
      @content
  // Exsample: +sm(med-w) 
  //            color: red
  @else if $media == min-w
    @media only screen and (min-width: $small)
      @content
  // Exsample: +sm(min-w) 
  //            color: red

=sml($media) //small-little
  @if $media == max-w
    @media only screen and (max-width: $small)
      @content
  // Exsample: +sml(max-w) 
  //            color: red
  @else if $media == med-w
    @media only screen and (min-width: $smallm + 1) and (max-width: $small - 1)
      @content
  // Exsample: +sml(med-w) 
  //            color: red
  @else if $media == min-w
    @media only screen and (min-width: $smallm)
      @content
  // Exsample: +sml(min-w) 
  //            color: red

=xs($media) //extra small
  @if $media == max-w
    @media only screen and (max-width: $smallm)
      @content
  // Exsample: +xs(max-w) 
  //            color: red
  @else if $media == med-w
    @media only screen and (min-width: $extrasmall + 1) and (max-width: $smallm - 1)
      @content
  // Exsample: +xs(med-w) 
  //            color: red
  @else if $media == min-w
    @media only screen and (min-width: $extrasmall)
      @content
  // Exsample: +xs(min-w) 
  //            color: red

// Caret-top пример: +caret-t  +caret-t($white,$orange,8px,5px,3px)
=caret-t($bg: #ffffff, $bdc: #000000, $cw: 6px, $bdw: 5px, $bd: 1px)
  position: relative

  &:before
    content: ''
    position: absolute
    top: 0
    left: 0
    border-bottom: $cw solid $bdc
    border-left: $cw solid transparent
    border-right: $cw solid transparent

  &:after
    content: ''
    position: absolute
    left: $bd
    top: $bd
    border-bottom: $bdw solid $bg
    border-left: $bdw solid transparent
    border-right: $bdw solid transparent

// End cater-top

=reset
  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video
    margin: 0
    padding: 0
    border: 0
    font-size: 100%
    vertical-align: baseline

  // HTML5 display-role reset for older browsers
  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section
    display: block

  body
    line-height: 1

  ol, ul
    list-style: none

  blockquote, q
    quotes: none

  blockquote
    &:before, &:after
      content: ""
      content: none

  q
    &:before, &:after
      content: ""
      content: none

  table
    border-collapse: collapse
    border-spacing: 0

+reset